{"version":3,"sources":["../../src/services/scratchDownloader.js"],"names":["ASSET_SERVER","PROJECT_SERVER_SB2","PROJECT_SERVER_SB3","collecteyData","assets","getProjectUrlSb2","asset","assetIdParts","assetId","split","assetUrlParts","push","projectJSON","join","getProjectUrlSb3","getAssetUrl","dataFormat","downloadJsonProject","projectId","getJsonProject","vm","VirtualMachine","storage","ScratchStorage","AssetType","addWebStore","Project","ImageVector","ImageBitmap","Sound","attachStorage","load","then","projectAsset","loadProject","data","toJSON","err","module","exports"],"mappings":"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","sourcesContent":["const ASSET_SERVER = 'https://cdn.assets.scratch.mit.edu/';\nconst PROJECT_SERVER_SB2 = 'https://cdn.projects.scratch.mit.edu/';\nconst PROJECT_SERVER_SB3 = 'https://projects.scratch.mit.edu/';\n\nimport VirtualMachine from 'scratch-vm';\nimport ScratchStorage from 'scratch-storage';\n\nconst collecteyData = {assets: {}};\n    \n\nfunction getProjectUrlSb2(asset) {\n    const assetIdParts = asset.assetId.split('.');\n    const assetUrlParts = [PROJECT_SERVER_SB2, 'internalapi/project/', assetIdParts[0], '/get/'];\n    if (assetIdParts[1]) {\n        assetUrlParts.push(assetIdParts[1]);\n    }\n    return collecteyData.projectJSON = assetUrlParts.join('');\n};\n\n\nfunction getProjectUrlSb3(asset) {\n    const assetIdParts = asset.assetId.split('.');\n    const assetUrlParts = [PROJECT_SERVER_SB3, assetIdParts[0], '/get/'];\n    if (assetIdParts[1]) {\n        assetUrlParts.push(assetIdParts[1]);\n    }\n    return collecteyData.projectJSON = assetUrlParts.join('');\n};\n    \n\nfunction getAssetUrl(asset) {\n    const assetUrlParts = [\n        ASSET_SERVER,\n        'internalapi/asset/',\n        asset.assetId,\n        '.',\n        asset.dataFormat,\n        '/get/'\n    ];\n    return collecteyData.assets[asset.assetId] = assetUrlParts.join('');\n};\n    \n\nfunction downloadJsonProject(projectId) {\n\n    // const zip = new JSZip();\n    // zip.file('project.json', projectJson);\n    // zip.generateAsync({type:\"blob\"}).then(function (blob) { \n    //         saveAs(blob, projectId.concat('.zip'));                          \n    // }, function (err) {\n    //     console.log(err);\n    // });\n    \n    return projectId;    \n}\n\n\nfunction getJsonProject(projectId) {\n    \n    const vm = new VirtualMachine();\n    const storage = new ScratchStorage();\n\n    const AssetType = storage.AssetType;\n    storage.addWebStore([AssetType.Project], getProjectUrlSb2);\n    storage.addWebStore([AssetType.ImageVector, AssetType.ImageBitmap, AssetType.Sound], getAssetUrl);\n    vm.attachStorage(storage);\n\n    return storage.load(storage.AssetType.Project, projectId)\n        .then(projectAsset => {\n            return vm.loadProject(projectAsset.data);\n        })\n        .then(() => {\n            return vm.toJSON();\n        })\n        .catch((err) => {\n            storage.addWebStore([AssetType.Project], getProjectUrlSb3);\n            storage.addWebStore([AssetType.ImageVector, AssetType.ImageBitmap, AssetType.Sound], getAssetUrl);\n            vm.attachStorage(storage);\n            return storage.load(storage.AssetType.Project, projectId)\n            .then(projectAsset => {\n                return vm.loadProject(projectAsset.data);\n            })\n            .then(() => {\n                return vm.toJSON();;\n            })\n    })\n}\n\nmodule.exports = {getJsonProject};"],"file":"scratchDownloader.js"}