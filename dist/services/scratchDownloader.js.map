{"version":3,"sources":["../../src/services/scratchDownloader.js"],"names":["ASSET_SERVER","PROJECT_SERVER_SB2","PROJECT_SERVER_SB3","collecteyData","assets","getProjectUrlSb2","asset","assetIdParts","assetId","split","assetUrlParts","push","projectJSON","join","getProjectUrlSb3","getAssetUrl","dataFormat","downloadJsonProject","projectId","getJsonProject","vm","VirtualMachine","storage","ScratchStorage","AssetType","addWebStore","Project","ImageVector","ImageBitmap","Sound","attachStorage","load","then","projectAsset","loadProject","data","toJSON","catch","err","module","exports"],"mappings":"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","file":"scratchDownloader.js","sourcesContent":["const ASSET_SERVER = 'https://cdn.assets.scratch.mit.edu/';\nconst PROJECT_SERVER_SB2 = 'https://cdn.projects.scratch.mit.edu/';\nconst PROJECT_SERVER_SB3 = 'https://projects.scratch.mit.edu/';\n\nimport VirtualMachine from 'scratch-vm';\nimport ScratchStorage from 'scratch-storage';\n\nconst collecteyData = {assets: {}};\n    \n\nfunction getProjectUrlSb2(asset) {\n    const assetIdParts = asset.assetId.split('.');\n    const assetUrlParts = [PROJECT_SERVER_SB2, 'internalapi/project/', assetIdParts[0], '/get/'];\n    if (assetIdParts[1]) {\n        assetUrlParts.push(assetIdParts[1]);\n    }\n    return collecteyData.projectJSON = assetUrlParts.join('');\n};\n\n\nfunction getProjectUrlSb3(asset) {\n    const assetIdParts = asset.assetId.split('.');\n    const assetUrlParts = [PROJECT_SERVER_SB3, assetIdParts[0], '/get/'];\n    if (assetIdParts[1]) {\n        assetUrlParts.push(assetIdParts[1]);\n    }\n    return collecteyData.projectJSON = assetUrlParts.join('');\n};\n    \n\nfunction getAssetUrl(asset) {\n    const assetUrlParts = [\n        ASSET_SERVER,\n        'internalapi/asset/',\n        asset.assetId,\n        '.',\n        asset.dataFormat,\n        '/get/'\n    ];\n    return collecteyData.assets[asset.assetId] = assetUrlParts.join('');\n};\n    \n\nfunction downloadJsonProject(projectId) {\n\n    // const zip = new JSZip();\n    // zip.file('project.json', projectJson);\n    // zip.generateAsync({type:\"blob\"}).then(function (blob) { \n    //         saveAs(blob, projectId.concat('.zip'));                          \n    // }, function (err) {\n    //     console.log(err);\n    // });\n    \n    return projectId;    \n}\n\n\nfunction getJsonProject(projectId) {\n    \n    const vm = new VirtualMachine();\n    const storage = new ScratchStorage();\n\n    const AssetType = storage.AssetType;\n    storage.addWebStore([AssetType.Project], getProjectUrlSb2);\n    storage.addWebStore([AssetType.ImageVector, AssetType.ImageBitmap, AssetType.Sound], getAssetUrl);\n    vm.attachStorage(storage);\n\n    return storage.load(storage.AssetType.Project, projectId)\n        .then(projectAsset => {\n            return vm.loadProject(projectAsset.data);\n        })\n        .then(() => {\n            return vm.toJSON();\n        })\n        .catch((err) => {\n            storage.addWebStore([AssetType.Project], getProjectUrlSb3);\n            storage.addWebStore([AssetType.ImageVector, AssetType.ImageBitmap, AssetType.Sound], getAssetUrl);\n            vm.attachStorage(storage);\n            return storage.load(storage.AssetType.Project, projectId)\n            .then(projectAsset => {\n                return vm.loadProject(projectAsset.data);\n            })\n            .then(() => {\n                return vm.toJSON();;\n            })\n    })\n}\n\nmodule.exports = {getJsonProject};"]}